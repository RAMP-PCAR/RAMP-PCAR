/* 
 * 
 * This template is not proper JSON as it allows for comments (like this one) and multi-line values.
 * 
 * 
 * JavaScript-Templates templating engine
 * https://github.com/blueimp/JavaScript-Templates
 * 
 */
{				
        // layer level, layer is passed in as o.data. Level 1
        // Filter overall structure, contains 1 to many filter row for the available layers.
        "layer_item":"
            <li id='{%=o.data[o.idx].id%}' class='layerList1' role='option' aria-selected='false' aria-grabbed='false'>
                {%  
                    var s = o.data[o.idx].layerConfig.symbology || o.data[o.idx].layerConfig.legend || { type: 'simple' };

                    include('filter_row_template', o);
                    include(s.type + '_renderer_template', s);
                    include('layer_settings', o.fn.generateSettingsToggle(o));
                %}
            </li>
        ",

        // Level 2
        // Filter row overall layout for a given layer
        "filter_row_template": "
            <fieldset>
                    <legend>
                        <div class='filter-row'>
                            <div class='sort-handle' tabindex='0' aria-label='{%=i18n.t('filterManager.layerHandleLabel', { layerName: o.data[o.idx].layerConfig.displayName })%}'></div>
                            <div class='layer-details'>
                    
                                {%  
                                    var s = o.data[o.idx].layerConfig.symbology || o.data[o.idx].layerConfig.legend || { type: 'simple' };
                                    console.log(s);

                                    include(s.type + '_layer_image_box', o);
                                %}   
                                
                                <div class='layer-controls'>
                                    <div class='layer-name'>
                                        <span title='{%=o.data[o.idx].layerConfig.displayName%}'>{%=o.data[o.idx].layerConfig.displayName%}</span>
                                    </div>
                                    <div class='btn-group margin-top-none'>												
                                        
                                        {% if(!o.data[o.idx].layerConfig.isStatic) { %}
                                        
                                            <button class='btn btn-xs button-none xsmall metadata-button' data-layer-id='{%=o.data[o.idx].layerConfig.id%}'>{%=i18n.t('filterManager.metadata')%}</button>
                                           
                                        {% } %}
                                            
                                        {% if (o.data[o.idx].layerConfig.settings.panelEnabled && !o.data[o.idx].layerConfig.isStatic) { %}
                                            
                                            <span class='separator' role='presentation'></span>
                                        
                                        {% } %}
                                        
                                        {% if (o.data[o.idx].layerConfig.settings.panelEnabled) { %}
                                        
                                            <button class='btn btn-xs button-none xsmall settings-button' data-layer-id='{%=o.data[o.idx].layerConfig.id%}'>{%=i18n.t('filterManager.settings')%}</button>
                                          
                                        {% } %}
                                    </div>
                                </div>
                            </div>
                            <div class='layer-checkboxes'>										
                                {% include('filter_legend_template', o.fn.generateVisibilityLegend(o));%}
                                {% include('filter_legend_template', o.fn.generateBoundingBoxLegend(o));%}
                            </div>
                            <div class='clearfix'>
                            </div>
                    </div>
                </legend>                                                                                       
            </fieldset>
        ",
        
        "simple_layer_image_box": "
            <div class='layer-image-box'>
                <img alt='' role='presentation' src='{%=o.fn.getSymbolForLayer(o.data[o.idx].layerConfig)[0]%}' class='layer-image bg-white'>
            </div>
        ",

        "wms_layer_image_box": "
            {% include('complex_layer_image_box', o.fn.getSymbolForLayer(o.data[o.idx].layerConfig)); %}
        ",

        "uniqueValue_layer_image_box": "
            {% include('complex_layer_image_box', o.fn.getSymbolForLayer(o.data[o.idx].layerConfig)); %}
        ",

        "classBreaks_layer_image_box": "
            {% include('complex_layer_image_box', o.fn.getSymbolForLayer(o.data[o.idx].layerConfig)); %}
        ",

        "complex_layer_image_box": "
            <div class='layer-complex-image-box'>
                <div class='layer-image-box'>                                  
                    <img alt='' role='presentation' src='{%=o[2]%}' class='layer-image bg-white'>
                </div>
                <div class='layer-image-box'>                                  
                    <img alt='' role='presentation' src='{%=o[1]%}' class='layer-image bg-white'>
                </div>
                <div class='layer-image-box'>                                  
                    <img alt='' role='presentation' src='{%=o[0]%}' class='layer-image bg-white'>
                </div>
                <button class='btn btn-xs button-none renderer-button'>
                    <i class='fa fa-square'></i>
                    <i class='fa fa-plus-square-o'></i>
                    <i class='fa fa-minus-square-o'></i>                                            
                    <span class='wb-invisible'></span>
                </button>
                
            </div>
        ",
        
        "wms_renderer_template": "
             <div class='renderer-list'>
                <div class='wms-legend-image-box'>
                    <h4 class='mrgn-tp-0 h6'>{%=i18n.t('filterManager.legend')%}</h4>
                    <div class='image-div'>
                        <img class='wms-legend-image bg-white' src='{%=o.imageUrl%}' role='presentation' alt=''>
                    </div>
                </div>       
             </div>
        ",

        "simple_renderer_template": " ",

        "uniqueValue_renderer_template": "
            <div class='renderer-list'>
                <ul>
                    {% 
                        o.valueMaps.forEach(function(vm) {
                            include('renderer_template', {
                                imageUrl: vm.imageUrl,
                                label: vm.label || vm.value
                            });
                        });
                     %}
                </ul>
            </div>
        ",

        "classBreaks_renderer_template": "
            <div class='renderer-list'>
                <ul>
                    {% 
                        o.rangeMaps.forEach(function(rm) {
                            include('renderer_template', {
                                imageUrl: rm.imageUrl,
                                label: rm.label || rm.maxValue
                            });
                        });
                     %}
                </ul>
            </div>
        ",

        "renderer_template": "
            <li>
               <div class='layer-renderer'>
                  <div class='layer-renderer-image-box'>
                    <img alt='' src='{%=o.imageUrl%}' class='layer-renderer-image bg-white'>
                  </div>
                  <span title='{%=o.label%}'>{%=o.label%}</span>
                </div>
            </li>
        ",
        
        // Level 2
        // Filter row overall layout for a given layer
        "layer_settings":"
            {% if (o.settings.panelEnabled) { %}
                <div class='filter-row-settings bg-medium'>
                
                    <h4 class='mrgn-tp-0 mrgn-bttm-0 smaller'>{%=i18n.t('filterManager.settingsLayerSettings')%}</h4>

                    {% if (o.settings.opacity.enabled) { %}
                
                        <div class='transparency-setting'>
                            <span class='pull-left'>{%=i18n.t('filterManager.settingsOpacity')%}</span>                
                        
                            <div class='nstSlider' data-aria_enabled='true'
                                data-range_min='0' data-range_max='1' 
                                data-cur_min='{%=o.settings.opacity.default%}'

                                data-layer-id='{%=o.layerId%}' >                                                      
                        
                                <div class='highlightPanel'></div>
                                <div class='leftGrip'></div>              
                            </div>
                            <span class='leftLabel'></span>                
                        </div>

                    {% } %}
                </div>
            {% } %}
        ",

        // filter row legend template 
        // used by level 2 to generate visibility and bounding box legend checkbox
        // added code to determine if bounding box is to be generated
        "filter_legend_template":"
            {% if(!o.disabled) { %}
                                        
                <div class='checkbox-custom'>
                <label for='{%=o.for%}' class='form-checkbox _tooltip {%=o.class%}' data-layer-id='{%=o.layerId%}' data-label-name='{%=o.label%}'>
                    <span class='wb-invisible'>{%=o.label%}</span>
                </label>
                <input id='{%=o.for%}' data-groupingattrib='{%=o.attr%}' value='{%=o.layerId%}' data-layer-id='{%=o.layerId%}' checked='{%=o.checked%}' class='layerList_legend'
                    type='checkbox'></input>
                </div>

            {% } else{ %}
                
                <div class='checkbox-custom placeholder' role='presentation'></div>

            {% } %}
        ",
        
        // filter row button template
        "filter_button_template":"
            <li>
                <button class='btn btn-xs button-none xsmall metadata-button' data-layer-id='{%=o.data[o.idx].layerConfig.id%}'>{%=i18n.t('filterManager.metadata')%}</button>
            </li>
        ",
        
        // Generates a data grid row with a checkbox.
        // o is the globalFilter setting in config.json
        // level 1: filter panel global section
        "filter_global_row_template":"
            <div>
                <div class='global-details'>
                    <div class='global-controls'>
                        <ul class='btn-group margin-top-none'>
                            <button class='btn btn-sm button-none' id='addDatasetToggle'> 
                                <i class='fa fa-plus'></i>
                                <span class='on-right'>{%= i18n.t('addDataset.title') %}</span>
                             </button>
                        </ul>
                    </div>
                </div>
                <div class='global-checkboxes'>
                   {% include(o.globalSelectorToggles, o);%}
                </div>
                <div class='clearfix'>
                </div>
            </div>
        ",

        "layerGlobalToggles":"
            {% include( 'filter_global_label_template_eye',o); %}
            {% include( 'filter_global_label_template_box',o); %}
        ",

        // level 2: filter panel global row; this is where "All Data" is located. Note: should rename this to custom checkbox template.
        //  custom template for global visibility
        "filter_global_label_template_eye": "
            <div class='checkbox-custom'>
                <label for='globalVisibility' class='form-checkbox _tooltip eye checked' title=''>
                    <span class='wb-invisible'></span>
                </label>
                <input id='globalVisibility' data-***='***' checked='checked' class='layerList_legend' type='checkbox' ></input>
            </div>
        ",

        // custom template for global bounding box visibility
        "filter_global_label_template_box": "
            <div class='checkbox-custom'>
                <label for='globalBox' class='form-checkbox _tooltip box checked' title=''>
                    <span class='wb-invisible'></span>
                </label>
                <input id='globalBox' data-***='***' checked='checked' class='layerList_legend' type='checkbox' ></input>
            </div>
        ",

        "layer_group": "
            <li>
                <ul role='listbox'>
                    {%
                        var i=0;
                        o.data.forEach(function(layer) {
                            o.idx = i;
                            include('layer_item',o);
                            i++;
                        });
                    %}
                </ul>
            </li>
            <li class='layer-group-separator' role='presentation'></li>
        ",


        // Entry point
        // Template to create filter content for RAMP	
        // o is the datawrapper object contains layers stored in o.data
        "filter_manager_template": "
            <div id='categories'>
                <div id='filterGlobalToggles' class='global-toggles'>
                    {% include('filter_global_row_template', o.config.templates);%}
                </div>
                <!-- layerList is the target for the Javascript version.  everything else uses the fieldsets-->
                <ul id='layerList' role='listbox' aria-label='{%=i18n.t('filterManager.layerListLabel')%}'>

                    {% 				
                        for (var prop in o.layerGroups ) {
                            if (o.layerGroups.hasOwnProperty(prop)) {
                                include('layer_group', o.layerGroups[prop]);
                            }
                        }
                    %}

                </ul>
                <div class='clearBoth'>
                </div>
            </div>
        ",

        "a_d_options_bg": "
            <div class='options-bg' role='presentation'><div class='bg-border'></div></div>
        ",

        "a_d_choice_button": "
            <button class='btn btn-sm btn-default btn-option {%= o.state %}' data-option='{%= o.option %}'>{%= o.optionName %}</button>
        ",        

        "a_d_choice_step":"
                <h3 class='h6'>{%= o.header %}</h3>
                <div class='btn-group choice-group' data-choice-id='{%= o.choiceId %}'>
                    {%              
                        for (var option in o.options ) {
                            if (o.options.hasOwnProperty(option)) {
                                include('a_d_choice_button', {
                                    state: o.active ? 'btn-action' : '',
                                    option: option,
                                    optionName: o.options[option]
                                });
                            }
                        }
                    %}
                </div>
        ",

        "a_d_double_list_list":"

                <div class='input-group list-group' data-list-id='{%= o.listId %}'>
                    <h3 class='h6'>{%= o.header %}</h3>
                    <label class='wb-inv' for='{%= o.listId %}list'>{%= o.label %}:</label>
                    <select name='select' class='form-control list-control input-sm' id='{%= o.listId %}list' data-role='none'>
                        <option value=''>blah</option>
                    </select>
                </div>
        ",

        "a_d_double_list_step":"
                <div class='double-list-container'>
                    {%     
                        o.lists.forEach(function(list) {
                            include('a_d_double_list_list', list);
                        });
                    %}
                </div>
        ",

        "a_d_list_list":"
                {% if(o.header) { %}
                    <h4 class='h6 smaller'>{%= o.header %}</h3>
                {% } %}

                <div class='input-group list-group' data-list-id='{%= o.listId %}'>
                    <label class='wb-inv' for='{%= o.listId %}list'>{%= o.label %}:</label>
                    <select name='select' class='form-control list-control input-sm' id='{%= o.listId %}list' data-role='none'>
                        <option value=''>blah</option>
                    </select>
                </div>
        ",        

        "a_d_list_step":"
                <h3 class='h6'>{%= o.header %}</h3>

                {%     
                    o.lists.forEach(function(list) {
                        include('a_d_list_list', list);
                    });
                %}
        ",

        "a_d_colour_picker":"
            <h3 class='h6'>{%= o.header %}</h3>

            <div class='color-picker-container'>
                <div class='input-group' data-list-id='{%= o.listId %}'>
                    <label class='wb-inv' for='{%= o.listId %}picker'>{%= o.label %}:</label>
                    <input name='input' class='color form-control picker-control input-sm' id='{%= o.listId %}picker' data-role='none'/>
                </div>
                <div class='color-picker-swatch' role='presentation' id='{%= o.listId %}pickerSwatch'></div>
            </div>
        ",

        "a_d_text_field":"
            <h3 class='h6'>{%= o.header %}</h3>

            <div class='input-group' data-list-id='{%= o.listId %}'>
                <label class='wb-inv' for='{%= o.listId %}textField'>{%= o.label %}:</label>
                <input name='input' class='form-control input-sm' id='{%= o.listId %}textField' data-role='none'/>
            </div>
        ",

        "a_d_load_file_or_URL_step": "
            <h3 class='h6'>{%= o.header %}</h3> 

            <div class='input-group'>
                <label class='wb-inv' for='{%= o.idPrefix %}input'>{%= o.label %}</label>
                <div class='input-group-btn browse-files'>
                    <div class='input-container'>
                        <input type='file' data-role='upload'>
                    </div>
                    <span class='btn btn-default btn-sm browse-button' id='{%= o.idPrefix %}pseudoBrowse'>
                        <i class='fa fa-file'></i>
                        <i class='fa fa-file-o'></i>
                        <span class='on-right wb-inv'>Browse</span>
                    </span>                                                                                                
                </div>

                <input name='input' class='form-control load-url-control input-sm' id='{%= o.idPrefix %}input' data-role='none' placeholder='{%= o.placeholder %}'/>
                
                <span class='glyphicon glyphicon-ok form-control-feedback'></span>
                <span class='glyphicon glyphicon-remove form-control-feedback'></span>
                <span class='input-group-btn'>
                    <button id='{%= o.idPrefix %}inputSubmit' class='btn btn-primary btn-sm btn-option btn-action btn-load disabled' data-action='{%= o.idPrefix %}' type='button'>{%= i18n.t('addDataset.load') %}</button>
                    <button id='{%= o.idPrefix %}cancel' class='btn btn-info btn-sm btn-option btn-action btn-cancel' data-action='{%= o.idPrefix %}cancel' type='button'>{%= i18n.t('addDataset.cancel') %}</button>
                </span>
            </div>
        ",

        "a_d_load_URL_step": "
                <h3 class='h6'>{%= o.header %}</h3> 

                <div class='input-group'>
                    <label class='wb-inv' for='{%= o.idPrefix %}input'>{%= o.label %}</label>
                    <input name='input' class='form-control load-url-control input-sm' id='{%= o.idPrefix %}input' data-role='none' placeholder='{%= o.placeholder %}'/>
                    <span class='glyphicon glyphicon-ok form-control-feedback'></span>
                    <span class='glyphicon glyphicon-remove form-control-feedback'></span>
                    <span class='input-group-btn wb-in'>
                        <button id='{%= o.idPrefix %}inputSubmit' class='btn btn-primary btn-sm btn-option btn-action btn-load disabled' data-action='{%= o.idPrefix %}' type='button'>{%= i18n.t('addDataset.load') %}</button>
                        <button id='{%= o.idPrefix %}cancel' class='btn btn-info btn-sm btn-option btn-action btn-cancel' data-action='{%= o.idPrefix %}cancel' type='button'>{%= i18n.t('addDataset.cancel') %}</button>
                    </span>
                </div>
        ",

        "a_d_add_dataset_button": "
            <div class='btn-add-dataset-container'>
                <button class='btn btn-primary btn-add-dataset'>{%= i18n.t('addDataset.addDatasetButton') %}</button>
            </div>
        ",

        "add_dataset_content_template": "
            <div class='add-dataset-content'> 
                <div class='step step-1 current-step'>
                    <div class='step-content'>
                        {% include('a_d_choice_step', {
                            header: i18n.t('addDataset.dataSource'),
                            active: true,
                            options: {
                                'option-service': i18n.t('addDataset.dataSourceService'),
                                'option-file': i18n.t('addDataset.dataSourceFile')
                            }
                        }); %}
                    </div>

                    <div class='step-options-container'>
                        {% include('a_d_options_bg', o); %}

                        <div class='step-options'>
                            <div class='step step-2 option-service' id='loadServiceStep'>
                                <div class='step-content load-url-step'>
                                    {% include('a_d_choice_step', {
                                        header: i18n.t('addDataset.serviceType'),
                                        choiceId: 'serviceType',
                                        options: {
                                            'option-feature': i18n.t('addDataset.serviceTypeFeature'),
                                            'option-wms': i18n.t('addDataset.serviceTypeWMS')
                                        }
                                    }); %}

                                    {% include('a_d_load_URL_step', {
                                        header: i18n.t('addDataset.serviceLayerURL'),
                                        label:  i18n.t('addDataset.serviceLayerURL'),
                                        idPrefix: 'serviceURL',
                                        placeholder: i18n.t('addDataset.serviceLayerURLPlaceholder')
                                    }); %}
                                </div>

                                <div class='step-options-container'>
                                    {% include('a_d_options_bg', o); %}

                                    <div class='step-options'>
                                        <div class='step step-3 option-feature' id='featureAttrStep'>
                                            <div class='step-content load-url-step'>
                                                {% include('a_d_list_step', {
                                                    header: i18n.t('addDataset.primaryAttribute'),
                                                    lists: [
                                                        {
                                                            label:  i18n.t('addDataset.primaryAttribute'),
                                                            listId: 'featurePrimaryAttr'
                                                        }
                                                    ]                                                                    
                                                }); %}

                                                {% include('a_d_add_dataset_button', o); %}
                                            </div>
                                        </div>

                                        <div class='step step-3 option-wms' id='wmsAttrStep'>
                                            <div class='step-content load-url-step'>
                                                {% include('a_d_list_step', {
                                                    header: i18n.t('addDataset.layerName'),
                                                    lists: [
                                                        {
                                                            label:  i18n.t('addDataset.layerName'),
                                                            listId: 'wmsLayerNameAttr'
                                                        }
                                                    ]                                                                    
                                                }); %}

                                                {% include('a_d_add_dataset_button', o); %}
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class='step step-2 option-file' id='loadFileStep'>
                                    <div class='step-content load-file-step'>
                                        {% include('a_d_choice_step', {
                                            header: i18n.t('addDataset.fileType'),
                                            choiceId: 'fileType',
                                            options: {
                                                'option-geojson': i18n.t('addDataset.geojson'),
                                                'option-csv': i18n.t('addDataset.csv'),
                                                'option-shapefile': i18n.t('addDataset.shapefile')
                                            }
                                        }); %}

                                        {% include('a_d_load_file_or_URL_step', {
                                            header: i18n.t('addDataset.fileOrURL'),
                                            label:  i18n.t('addDataset.fileOrURL'),
                                            idPrefix: 'fileOrURL',
                                            placeholder: i18n.t('addDataset.fileOrURLPlaceholder')
                                        }); %}
                                    </div>

                                <div class='step-options-container'>
                                    {% include('a_d_options_bg', o); %}

                                    <div class='step-options'>
                                        <div class='step step-3 option-geojson' id='geojsonAttrStep'>
                                            <div class='step-content load-url-step'>
                                                {% include('a_d_text_field', 
                                                    {
                                                        header: i18n.t('addDataset.datasetName'),
                                                        label:  i18n.t('addDataset.datasetName'),
                                                        listId: 'geojsonDatasetNameAttr'
                                                    }); 
                                                %}

                                                {% include('a_d_list_step', {
                                                    header: i18n.t('addDataset.primaryAttribute'),
                                                    lists: [
                                                        {
                                                            label:  i18n.t('addDataset.primaryAttribute'),
                                                            listId: 'geojsonPrimaryAttr'
                                                        }
                                                    ]                                                                    
                                                }); %}

                                                {% include('a_d_colour_picker', 
                                                    {
                                                        header: i18n.t('addDataset.colour'),
                                                        label:  i18n.t('addDataset.colour'),
                                                        listId: 'geojsonColourAttr'
                                                    }); 
                                                %} 

                                                {% include('a_d_add_dataset_button', o); %}                                                                
                                            </div>
                                        </div>

                                        <div class='step step-3 option-csv' id='csvAttrStep'>
                                            <div class='step-content load-url-step'>
                                                {% include('a_d_text_field', 
                                                    {
                                                        header: i18n.t('addDataset.datasetName'),
                                                        label:  i18n.t('addDataset.datasetName'),
                                                        listId: 'csvDatasetNameAttr'
                                                    }); 
                                                %} 

                                                {% include('a_d_list_step', {
                                                    header: i18n.t('addDataset.primaryAttribute'),
                                                    lists: [
                                                        {
                                                            label:  i18n.t('addDataset.primaryAttribute'),
                                                            listId: 'csvPrimaryAttr'
                                                        }
                                                    ]                                                                    
                                                }); %}
                                                
                                                {% include('a_d_double_list_step', {
                                                    lists: [
                                                        {
                                                            header: i18n.t('addDataset.latitude'),
                                                            label:  i18n.t('addDataset.latitude'),
                                                            listId: 'csvLatitudeAttr'
                                                        },
                                                        {
                                                            header: i18n.t('addDataset.longitude'),
                                                            label:  i18n.t('addDataset.longitude'),
                                                            listId: 'csvLongitudeAttr'
                                                        }
                                                    ]                                                                    
                                                }); %}
            
                                                {% include('a_d_colour_picker', 
                                                    {
                                                        header: i18n.t('addDataset.colour'),
                                                        label:  i18n.t('addDataset.colour'),
                                                        listId: 'csvColourAttr'
                                                    }); 
                                                %} 

                                                {% include('a_d_add_dataset_button', o); %}                                                                                                                                
                                            </div>
                                        </div>

                                        <div class='step step-3 option-shapefile' id='shapefileAttrStep'>
                                            <div class='step-content load-url-step'>
                                                {% include('a_d_text_field', 
                                                    {
                                                        header: i18n.t('addDataset.datasetName'),
                                                        label:  i18n.t('addDataset.datasetName'),
                                                        listId: 'shapefileDatasetNameAttr'
                                                    }); 
                                                %}

                                                {% include('a_d_list_step', {
                                                    header: i18n.t('addDataset.primaryAttribute'),
                                                    lists: [
                                                        {
                                                            label:  i18n.t('addDataset.primaryAttribute'),
                                                            listId: 'shapefilePrimaryAttr'
                                                        }
                                                    ]                                                                    
                                                }); %}

                                                {% include('a_d_colour_picker', 
                                                    {
                                                        header: i18n.t('addDataset.colour'),
                                                        label:  i18n.t('addDataset.colour'),
                                                        listId: 'shapefileColourAttr'
                                                    }); 
                                                %} 

                                                {% include('a_d_add_dataset_button', o); %}                                                                                                                               
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>                 
                    </div>                   
                </div>
            </div>
        ",

        "a_d_icon_solidLine": "<svg xmlns='http://www.w3.org/2000/svg' width='30' height='30'><rect fill='#{%= o.colour %}' x='3' y='14' width='24' height='2'></rect></svg>",

        "a_d_icon_outlinedPoly": "<svg xmlns='http://www.w3.org/2000/svg' width='30' height='30'><rect fill='#{%= o.colour %}' x='4' y='4' width='22' height='22'></rect></svg>",

        "a_d_icon_circlePoint": "<svg xmlns='http://www.w3.org/2000/svg' width='30' height='30'><circle cx='15' cy='15' r='5' fill='#{%= o.colour %}' /></svg>",


        "add_dataset_template": "            
            <div id='add-dataset-section-container' tabindex='-1'>
                <div id='add-dataset-section'>
                    <section>
                        <h2 class='mrgn-tp-sm mrgn-bttm-sm h5'>
                            {%= i18n.t('addDataset.title') %}
                        </h2>

                        <button class='button-none button-close _tooltip' title='{%= i18n.t('gui.actions.close') %}'>
                            <span class='wb-invisible'>{%= i18n.t('gui.actions.close') %}</span>
                        </button>

                        <div class='add-dataset-content'> </div>
                    </section>
                </div>
            </div>
        ",

        "filter_manager_template2": "
            
            <div id='categories'>
                <div id='filterGlobalToggles' class='global-toggles'>
                    {% include('filter_global_row_template', o.config.templates);%}
                </div>
                <!-- layerList is the target for the Javascript version.  everything else uses the fieldsets-->
                <ul id='layerList' role='listbox' aria-label='{%= i18n.t('filterManager.layerListLabel') %}'>
                   
                </ul>
            </div>

            {% include('add_dataset_template', o); %}
        "
}