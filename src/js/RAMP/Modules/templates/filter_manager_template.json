/* 
 * 
 * This template is not proper JSON as it allows for comments (like this one) and multi-line values.
 * 
 * 
 * JavaScript-Templates templating engine
 * https://github.com/blueimp/JavaScript-Templates
 * 
 */
{				
        // Generates legend for each interactive layer on the map (non-basemap layers).
        "filter_section_template":"{% 	
                                        include('filter_set_template',o);									
                                    %}",
        // layer level, layer is passed in as o.data. Level 1
        // Filter overall structure, contains 1 to many filter row for the available layers.
        "filter_set_template":"<li id='{%=o.data[o.idx].id%}' class='layerList1' role='option' aria-selected='false' aria-grabbed='false'>
                                        <fieldset>
                                            <legend>{% include('filter_row_template', o);%}</legend>																						
                                        </fieldset>
                                        {% include('filter_row_settings_template', o.fn.generateSettingsToggle(o));%}
                                    </li>",
        // Level 2
        // Filter row overall layout for a given layer
        "filter_row_template":"<div class='filter-row'>
                                    <div class='sort-handle' tabindex='0' aria-label='{%=i18n.t('filterManager.layerHandleLabel', { layerName: o.data[o.idx].layerConfig.displayName })%}'></div>
                                    <div class='layer-details'>
                                        <div class='layer-image-box'>									
                                            <img alt='' src='{%=o.data[o.idx].layerConfig.symbology.icons.default.imageUrl%}' class='layer-image background-white'>
                                        </div>
                                        <div class='layer-controls'>
                                            <div class='layer-name'>
                                                <span title='{%=o.data[o.idx].layerConfig.displayName%}'>{%=o.data[o.idx].layerConfig.displayName%}</span>
                                            </div>
                                            <ul class='button-group margin-top-none'>												
                                                
                                                {% if(!o.data[o.idx].layerConfig.isStatic) { %}
                                                <li>
                                                        <button class='button button-none button-small font-xsmall metadata-button' data-layer-uuid='{%=o.data[o.idx].layerConfig.uuid%}'>{%=i18n.t('filterManager.metadata')%}</button>
                                                    </li>
                                                {% } %}
                                                    
                                                {% if (o.data[o.idx].layerConfig.settings.enabled && !o.data[o.idx].layerConfig.isStatic) { %}
                                                    <li>
                                                    <span class='separator' role='presentation'></span>
                                                </li>
                                                {% } %}
                                                
                                                {% if (o.data[o.idx].layerConfig.settings.enabled) { %}
                                                <li>
                                                        <button class='button button-none button-small font-xsmall settings-button' data-layer-uuid='{%=o.data[o.idx].layerConfig.uuid%}'>{%=i18n.t('filterManager.settings')%}</button>
                                                    </li>
                                                {% } %}
                                            </ul>
                                        </div>
                                    </div>
                                    <div class='layer-checkboxes'>										
                                        {% include('filter_legend_template', o.fn.generateVisibilityLegend(o));%}
                                        {% include('filter_legend_template', o.fn.generateBoundingBoxLegend(o));%}
                                    </div>
                                    <div class='clear'>
                                    </div>
                                </div>",
        
        // Level 2
        // Filter row overall layout for a given layer
        "filter_row_settings_template":"{% if (o.settings.enabled) { %}
                                            <div class='filter-row-settings background-medium'>
                                            
                                                <h4 class='margin-top-none margin-bottom-medium background-light'>{%=i18n.t('filterManager.settingsLayerSettings')%}</h4>
    
                                                {% if (o.settings.opacity.enabled) { %}
                                            
                                                <div class='transparency-setting'>
                                                    <span class='float-left'>{%=i18n.t('filterManager.settingsOpacity')%}</span>                
                                                
                                                    <div class='nstSlider' data-aria_enabled='true'
                                                        data-range_min='0' data-range_max='1' 
                                                        data-cur_min='{%=o.settings.opacity.default%}'
    
                                                        data-layer-id='{%=o.layerId%}' >                                                      
                                                
                                                        <div class='highlightPanel'></div>
                                                        <div class='leftGrip'></div>              
                                                    </div>
                                                    <span class='leftLabel'></span>                
                                                </div>

                                                {% } %}
                                            </div>
                                        {% } %}",

        // filter row legend template 
        // used by level 2 to generate visibility and bounding box legend checkbox
        // added code to determine if bounding box is to be generated
        "filter_legend_template":"{% if(!o.disabled) { %}
                                        <div class='checkbox-custom'>
                                        <label for='{%=o.for%}' class='form-checkbox tooltip {%=o.class%}' data-layer-id='{%=o.layerId%}' data-label-name='{%=o.label%}'>
                                            <span class='wb-invisible'>{%=o.label%}</span>
                                        </label>
                                        <input id='{%=o.for%}' data-groupingattrib='{%=o.attr%}' value='{%=o.layerId%}' data-layer-id='{%=o.layerId%}' checked='{%=o.checked%}' class='layerList_legend'
                                            type='checkbox'></input>
                                        </div>
                                    {% } else{ %}
                                        <div class='checkbox-custom placeholder' role='presentation'></div>
                                    {% } %}",
        
        // filter row button template
        "filter_button_template":"<li>
                                    <button class='button button-none button-small font-xsmall metadata-button' data-layer-uuid='{%=o.data[o.idx].layerConfig.uuid%}'>{%=i18n.t('filterManager.metadata')%}</button>
                                </li>",
        // Generates a data grid row with a checkbox.
        // o is the globalFilter setting in config.json
        // level 1: filter panel global section
        "filter_global_row_template":"<div>
                                        <div class='global-details'>
                                            <div class='global-controls'>
                                                <ul class='button-group margin-top-none'>
                                                    {%=i18n.t('filterManager.allData')%}
                                                </ul>
                                            </div>
                                        </div>
                                        <div class='global-checkboxes'>
                                            {% o.toggleLabels.forEach(function(item){
                                                    include('filter_global_label_template',item); 
                                                });											
                                            %}										
                                        </div>
                                        <div class='clear'>
                                        </div>
                                    </div>",
        // level 2: filter panel global row; this is where "All Data" is located. Note: should rename this to custom checkbox template.
        //			This template is used to generate 'eye' and 'boundingbox' for All Data
        "filter_global_label_template":	"<div class='checkbox-custom'>
                                            <label for='{%=o.id%}' class='form-checkbox  tooltip {%=o.classAddition%}' title='{%=o.title%}'>
                                                <span class='wb-invisible'>{%=o.title%}</span>
                                            </label>
                                            <input id='{%=o.id%}' data-***='{%=o.dataAttribute%}' value='{%=o.layerId%}' checked='{%=o.checked%}' class='layerList_legend' type='checkbox' ></input>
                                        </div>",

        "layerGroup":   "<ul>
                        {%
                            var i=0;
                            o.data.forEach(function(layer) {
                                o.idx = i;
                                include('filter_section_template',o);
                                i++;
                            });
                        %}
                    </ul>
                    <li class='layer-group-separator' role='presentation'></li>",


        // Entry point
        // Template to create filter content for RAMP	
        // o is the datawrapper object contains layers stored in o.data
        "filter_manager_template":"<div id='categories'>
                                        <div id='filterGlobalToggles' class='global-toggles'>
                                            {% include('filter_global_row_template', o.config.globalFilter);%}
                                        </div>
                                        <!-- layerList is the target for the Javascript version.  everything else uses the fieldsets-->
                                        <ul id='layerList' role='listbox' aria-label='{%=i18n.t('filterManager.layerListLabel')%}'>

                                            {% 				
                                                for (var prop in o.layerGroups ) {
                                                    if (o.layerGroups.hasOwnProperty(prop)) {
                                                        include('layerGroup', o.layerGroups[prop]);
                                                    }
                                                }
                                            %}

                                        </ul>
                                        <div class='clearBoth'>
                                        </div>
                                    </div>"
                            
}